#!/bin/bash
compile_type=$1

subject=potrace
current_dir="$( cd "$(dirname "$0")" ; pwd -P )"

cd project/klee
export LLVM_COMPILER=clang
make -j32

# copy target to root dir

if [ $compile_type == 'to_bc' ];
then
    KLEE_CFLAGS="-lkleeRuntest -lkleeBasic -lhook -L${current_dir}/project_specific_lib/"
    PROJECT_CFALGS="-I./include -L./.libs/ -lxml2 -lz -llzma -lm -ldl"
    wllvm -ggdb3 -Wall -W -o ${subject} ${subject}.o ${PROJECT_CFALGS} ${KLEE_CFLAGS} -Wl,-rpath
    extract-bc -l llvm-link ${subject}

    cd ..
    # copy target bc to root dir
    cp klee/${subject}.bc .
    cp ${subject} ../
else
    echo "HI??"
    cd ./src
    $LOWFAT_CLANG -g -D__NO_STRING_INLINES -D_FORTIFY_SOURCE=2 -U__OPTIMIZE__ -I${current_dir}/project_specific_lib/ -Wno-everything -fsanitize=lowfat -o mkbitmap mkbitmap.o bitmap_io.o greymap.o getopt.o getopt1.o -lkleeRuntest -lkleeBasic -lhook -L${current_dir}/project_specific_lib/ -mllvm -lowfat-debug -mllvm -lowfat-no-replace-globals -mllvm -lowfat-symbolize -lstlimpl -lm
    cd ..
    make -j32
    cd ./src
    $LOWFAT_CLANG -g -D__NO_STRING_INLINES -D_FORTIFY_SOURCE=2 -U__OPTIMIZE__ -I${current_dir}/project_specific_lib/ -Wno-everything -fsanitize=lowfat -o potrace main.o bitmap_io.o backend_eps.o flate.o greymap.o render.o backend_pgm.o backend_svg.o backend_xfig.o backend_dxf.o backend_pdf.o backend_geojson.o lzw.o progress_bar.o bbox.o trans.o getopt.o getopt1.o -L${current_dir}/project_specific_lib/ ./.libs/libpotrace.a -lkleeRuntest -lkleeBasic -lhook -mllvm -lowfat-debug -mllvm -lowfat-no-replace-globals -mllvm -lowfat-symbolize -lstlimpl -lm -lz
    cp $subject ../../
    echo "BYEE"
fi


cd ..
