#!/bin/bash
compile_type=$1

subject=readelf
current_dir="$( cd "$(dirname "$0")" ; pwd -P )"

cd project/klee
export LLVM_COMPILER=clang
make -j32 #&> /dev/null

cd binutils
make $subject #&> /dev/null

# copy target to root dir

if [ $compile_type == 'to_bc' ];
then
    cp ./${subject} ../..
    extract-bc ${subject}
    cd ../..
    # copy target bc to root dir
    cp klee/binutils/${subject}.bc .

else
        # build lowfat
        $LOWFAT_CLANG -W -Wall -Wstrict-prototypes -Wmissing-prototypes -Wshadow -Werror -I../../binutils/../zlib -g -D__NO_STRING_INLINES -D_FORTIFY_SOURCE=2 -U__OPTIMIZE__ -Wno-everything -fsanitize=lowfat -static-libstdc++ -static-libgcc -o readelf readelf.o version.o unwind-ia64.o dwarf.o elfcomm.o -lkleeRuntest -lkleeBasic -mllvm -lowfat-debug -mllvm -lowfat-no-check-reads -mllvm -lowfat-no-check-writes -mllvm -lowfat-no-check-memset -mllvm -lowfat-no-check-memcpy -mllvm -lowfat-no-check-escapes -mllvm -lowfat-no-check-fields -mllvm -lowfat-check-whole-access -mllvm -lowfat-no-replace-globals -mllvm -lowfat-no-replace-alloca -mllvm -lowfat-no-replace-malloc -mllvm -lowfat-symbolize -lstlimpl ../libiberty/libiberty.a -L${current_dir}/project/klee/zlib -lz

        cp ./${subject} ../..
fi

cd ${current_dir}