#!/bin/bash
compile_type=$1

subject=objdump
current_dir="$( cd "$(dirname "$0")" ; pwd -P )"

cd project/klee
export LLVM_COMPILER=clang
make -j32 #&> /dev/null

cd binutils
make $subject #&> /dev/null

# copy target to root dir

if [ $compile_type == 'to_bc' ];
then
    cp ./${subject} ../..
    extract-bc ${subject}
    cd ../..
    # copy target bc to root dir
    cp klee/binutils/${subject}.bc .

else
        # build lowfat
        $LOWFAT_CLANG -W -Wall -Wstrict-prototypes -Wmissing-prototypes -Wshadow -Werror -I../../binutils/../zlib -g -D__NO_STRING_INLINES -D_FORTIFY_SOURCE=0 -U__OPTIMIZE__ -Wno-everything -fsanitize=lowfat -mllvm -static-libstdc++ -static-libgcc -o objdump objdump.o dwarf.o prdbg.o rddbg.o debug.o stabs.o ieee.o rdcoff.o bucomm.o version.o filemode.o elfcomm.o  ../opcodes/.libs/libopcodes.a ../bfd/.libs/libbfd.a -L${current_dir}/project/klee/zlib -lkleeRuntest -lkleeBasic -mllvm -lowfat-debug -mllvm -lowfat-no-check-reads -mllvm -lowfat-no-check-writes -mllvm -lowfat-no-check-memset -mllvm -lowfat-no-check-memcpy -mllvm -lowfat-no-check-escapes -mllvm -lowfat-no-check-fields -mllvm -lowfat-check-whole-access -mllvm -lowfat-no-replace-globals -mllvm -lowfat-no-replace-alloca -mllvm -lowfat-no-replace-malloc -mllvm -lowfat-symbolize -lstlimpl -lz ../libiberty/libiberty.a
        
        cp ./${subject} ../..
fi

cd ${current_dir}