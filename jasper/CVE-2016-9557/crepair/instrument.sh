#!/bin/bash
script_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
benchmark_name=$(echo $script_dir | rev | cut -d "/" -f 4 | rev)
project_name=$(echo $script_dir | rev | cut -d "/" -f 3 | rev)
bug_id=$(echo $script_dir | rev | cut -d "/" -f 2 | rev)
dir_name=$1/$benchmark_name/$project_name/$bug_id


cat <<EOF > $script_dir/repair.conf
dir_exp:$dir_name
tag_id:$bug_id
src_directory:$dir_name/src
binary_path:$dir_name/src/src/appl/imginfo
config_command:skip
build_command:make CC=crepair-cc CFLAGS="-static -ggdb -g -O0 -fsanitize=signed-integer-overflow" CXXFLAGS="-static -ggdb -g -O0 -fsanitize=signed-integer-overflow"
test_input_list:-f \$POC
poc_list:$script_dir/tests/1.j2k
EOF


cat <<EOF > $dir_name/bug.json
{
  "project": {
    "name": "$project_name"
  },
  "name": "$bug_id",
  "binary": "$dir_name/src/src/appl/imginfo",
  "crash": {
    "command": "-f \$POC",
    "input": "$script_dir/tests/1.j2k",
    "extra-klee-flags": "",
    "expected-exit-code": 1
  },
  "source-directory": "src",
  "build": {
    "directory": "src",
    "binary": "$dir_name/src/src/appl/imginfo",
    "commands": {
      "prebuild": "exit 0",
      "clean": "make clean  > /dev/null 2>&1",
      "build": "make CC=crepair-cc CFLAGS='-static -ggdb -g -O0 -fsanitize=signed-integer-overflow' CXXFLAGS='-static -ggdb -g -O0 -fsanitize=signed-integer-overflow' > /dev/null 2>&1 "
    }
  }
}

cd $dir_name/src
CC=wllvm CXX=wllvm++ ./configure CFLAGS="-g -O0 -static" CXXFLAGS=$CFLAGS
CC=crepair-cc CXX=crepair-cxx make CFLAGS="-static -ggdb -g -O0" CXXFLAGS=$CFLAGS -j`nproc`
